[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ai-agent-rag-app"
version = "1.0.0"
description = "A Retrieval-Augmented Generation (RAG) system using FastAPI and LangChain with multi-vector-store support"
readme = "./README.md"
license = { text = "MIT" }
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
keywords = ["rag", "ai", "langchain", "fastapi", "embeddings", "vector-database"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
requires-python = ">=3.10"
dependencies = [
    # Core FastAPI and server dependencies
    "fastapi==0.115.9",
    "uvicorn[standard]==0.34.1",
    "uvloop==0.21.0",
    "httptools==0.6.4",
    "watchfiles==1.0.5",
    "python-dotenv==1.1.0",
    "pydantic==2.11.3",
    "pydantic-core==2.33.1",
    "pydantic-settings==2.8.1",
    # LangChain ecosystem
    "langchain==0.3.23",
    "langchain-community==0.3.21",
    "langchain-core==0.3.54",
    "langchain-openai==0.3.14",
    "langchain-text-splitters==0.3.8",
    "langsmith==0.3.32",
    # Vector database and embeddings
    "chromadb==1.0.5",
    "chroma-hnswlib==0.7.6",
    "sentence-transformers==4.1.0",
    "numpy==2.2.4",
    "scipy==1.15.2",
    "scikit-learn==1.6.1",
    # OpenAI and AI model providers
    "openai==1.75.0",
    "tiktoken==0.9.0",
    "transformers==4.51.3",
    "tokenizers==0.21.1",
    "torch==2.6.0",
    "safetensors==0.5.3",
    "huggingface-hub==0.30.2",
    # Document processing
    "unstructured==0.17.2",
    "unstructured-client==0.32.4",
    "beautifulsoup4==4.13.4",
    "lxml==5.3.2",
    "pypdf==5.4.0",
    "python-magic==0.4.27",
    "filetype==1.2.0",
    "html5lib==1.1",
    "python-oxmsg==0.0.2",
    # HTTP and networking
    "httpx==0.28.1",
    "httpx-sse==0.4.0",
    "requests==2.32.3",
    "requests-oauthlib==2.0.0",
    "requests-toolbelt==1.0.0",
    "aiohttp==3.11.16",
    "aiofiles==24.1.0",
    "aiohappyeyeballs==2.6.1",
    "aiosignal==1.3.2",
    "urllib3==2.4.0",
    "certifi==2025.1.31",
    "charset-normalizer==3.4.1",
    "idna==3.10",
    # Data processing and utilities
    "jq==1.8.0",
    "jinja2==3.1.6",
    "pyyaml==6.0.2",
    "orjson==3.10.16",
    "jsonpatch==1.33",
    "jsonpointer==3.0.0",
    "jsonschema==4.23.0",
    "jsonschema-specifications==2024.10.1",
    "python-dateutil==2.9.0.post0",
    "python-iso639==2025.2.18",
    "rapidfuzz==3.13.0",
    # Text processing and NLP
    "nltk==3.9.1",
    "langdetect==1.0.9",
    "regex==2024.11.6",
    "emoji==2.14.1",
    # Cryptography and security
    "cryptography==44.0.2",
    "bcrypt==4.3.0",
    "oauthlib==3.2.2",
    # Database and storage
    "sqlalchemy==2.0.40",
    "pypika==0.48.9",
    # Monitoring and telemetry
    "opentelemetry-api==1.32.1",
    "opentelemetry-sdk==1.32.1",
    "opentelemetry-instrumentation==0.53b1",
    "opentelemetry-instrumentation-asgi==0.53b1",
    "opentelemetry-instrumentation-fastapi==0.53b1",
    "opentelemetry-exporter-otlp-proto-common==1.32.1",
    "opentelemetry-exporter-otlp-proto-grpc==1.32.1",
    "opentelemetry-proto==1.32.1",
    "opentelemetry-semantic-conventions==0.53b1",
    "opentelemetry-util-http==0.53b1",
    "posthog==3.25.0",
    # Cloud and infrastructure
    "kubernetes==32.0.1",
    "google-auth==2.39.0",
    "googleapis-common-protos==1.70.0",
    "grpcio==1.71.0",
    "pyasn1==0.6.1",
    "pyasn1-modules==0.4.2",
    "rsa==4.9.1",
    # CLI and utilities
    "typer==0.15.2",
    "click==8.1.8",
    "rich==14.0.0",
    "coloredlogs==15.0.1",
    "humanfriendly==10.0",
    "shellingham==1.5.4",
    # Core Python utilities
    "typing-extensions==4.13.2",
    "typing-inspect==0.9.0",
    "typing-inspection==0.4.0",
    "dataclasses-json==0.6.7",
    "marshmallow==3.26.1",
    "attrs==25.3.0",
    "deprecated==1.2.18",
    "overrides==7.7.0",
    "backoff==2.2.1",
    "tenacity==9.1.2",
    "cachetools==5.5.2",
    "durationpy==0.9",
    "eval-type-backport==0.2.2",
    # System and performance
    "psutil==7.0.0",
    "joblib==1.4.2",
    "threadpoolctl==3.6.0",
    "nest-asyncio==1.6.0",
    "monotonic==1.6",
    "mmh3==5.1.0",
    "zstandard==0.23.0",
    # Build and packaging utilities
    "build==1.2.2.post1",
    "pyproject-hooks==1.2.0",
    "setuptools==78.1.0",
    "packaging==24.2",
    "importlib-metadata==8.6.1",
    "importlib-resources==6.5.2",
    "zipp==3.21.0",
    # Additional utilities
    "filelock==3.18.0",
    "fsspec==2025.3.2",
    "flatbuffers==25.2.10",
    "frozenlist==1.6.0",
    "multidict==6.4.3",
    "mypy-extensions==1.0.0",
    "networkx==3.4.2",
    "olefile==0.47",
    "onnxruntime==1.21.0",
    "pillow==11.2.1",
    "propcache==0.3.1",
    "protobuf==5.29.4",
    "pycparser==2.22",
    "pygments==2.19.1",
    "referencing==0.36.2",
    "rpds-py==0.24.0",
    "six==1.17.0",
    "sniffio==1.3.1",
    "soupsieve==2.6",
    "starlette==0.45.3",
    "sympy==1.13.1",
    "tqdm==4.67.1",
    "webencodings==0.5.1",
    "websocket-client==1.8.0",
    "websockets==15.0.1",
    "wrapt==1.17.2",
    "yarl==1.20.0",
    # Development and parsing
    "cffi==1.17.1",
    "chardet==5.2.0",
    "distro==1.9.0",
    "h11==0.14.0",
    "httpcore==1.0.8",
    "jiter==0.9.0",
    "markdown-it-py==3.0.0",
    "markupsafe==3.0.2",
    "mdurl==0.1.2",
    "mpmath==1.3.0",
    "anyio==4.9.0",
    "asgiref==3.8.1",
    "annotated-types==0.7.0",
    "dotenv>=0.9.9",
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

# Testing dependencies
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "httpx>=0.24.0",
    "respx>=0.20.0",
]

# Documentation dependencies
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.22.0",
]

# Production dependencies
prod = [
    "gunicorn>=21.0.0",
]

[project.urls]
"Homepage" = "https://github.com/savg92/ai_agent_app"
"Bug Reports" = "https://github.com/savg92/ai_agent_app/issues"
"Source" = "https://github.com/savg92/ai_agent_app"
"Documentation" = "https://github.com/savg92/ai_agent_app#readme"

[project.scripts]
# CLI entry points
manage-stores = "backend.manage_stores:main"
rebuild-db = "backend.rebuild_db:main"

[tool.hatch.build]
# Only include the backend directory and data directory
include = [
    "*.py",
    "__pycache__/",
    "../data/",
    "../README.md",
    "../LICENSE*",
]

[tool.hatch.build.targets.wheel]
packages = ["backend"]

# Development tools configuration
[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
    | \.venv
    | \.env
    | __pycache__
    | build
    | dist
    | vector_stores
    | chroma_db_store
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["**/vector_stores/**", "**/chroma_db_store/**"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "vector_stores/",
    "chroma_db_store/",
    "__pycache__/",
    ".venv/",
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-v --tb=short --strict-markers --disable-warnings"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["backend"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/vector_stores/*",
    "*/chroma_db_store/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
